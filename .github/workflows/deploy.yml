name: Laravel

on:
  schedule:
    - cron: '24 23 * * *'
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  laravel-tests:

    runs-on: ubuntu-latest

    steps:
    - uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
      with:
        php-version: '8.3'
    - uses: actions/checkout@v3
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"
    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
    - name: Generate key
      run: php artisan key:generate
    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache
    - name: Create Database
      run: |
        mkdir -p database
        touch database/database.sqlite
    - name: Execute tests (Unit and Feature tests) via PHPUnit
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: database/database.sqlite
      run: vendor/bin/phpunit

  Image-generate:

      needs: laravel-tests
      name: Build image
      runs-on: ubuntu-latest
    
      steps:
      - uses: actions/checkout@v3
      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)
  
  Docker-image-upload:

        needs: Image-generate
        name: Upload image to DockerHub
      
        runs-on: ubuntu-latest
      
        permissions:
          contents: read
          packages: write
      
          # This is used to complete the identity challenge
          # with sigstore/fulcio when running outside of PRs.
          id-token: write
      
        steps:
        - name: Checkout repository
          uses: actions/checkout@v3  
      
        # Install the cosign tool except on PR's
        # https://github.com/sigstore/cosign-installer
        - name: Install cosign
          if: github.event_name != 'pull_request'
          uses: sigstore/cosign-installer@6e04d228eb30da1757ee4e1dd75a0ec73a653e06 #v3.1.1
          with:
            cosign-release: 'v2.1.1'
      
        # Set up BuildKit Docker container builder to be able to build
        # multi-platform images and export cache
        # https://github.com/docker/setup-buildx-action
      
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0
      
          # Login against a Docker registry except on PR
          # https://github.com/docker/login-action
        - name: Log into registry ${{ env.REGISTRY }}
          if: github.event_name != 'pull_request'
          uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
          with:
            registry: ${{ env.REGISTRY }}
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUBACESS }}
      
        # Extract metadata (tags, labels) for Dockers
        # https://github.com/docker/metadata-action
        - name: Extract Docker metadata
          id: meta
          uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
          with:
            images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      
        # Build and push Docker image with Buildx (don't push on PR)
        # https://github.com/docker/build-push-action
        - name: Build and push Docker image
          id: build-and-push
          uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
          with:
            context: .
            push: ${{ github.event_name != 'pull_request' }}
            tags: ${{ steps.meta.outputs.tags }}
            labels: ${{ steps.meta.outputs.labels }}
            cache-from: type=gha
            cache-to: type=gha,mode=max
      
        # Sign the resulting Docker image digest except on PRs.
        # This will only write to the public Rekor transparency log when the Docker
        # repository is public to avoid leaking data.  If you would like to publish
        # transparency data even for private images, pass --force to cosign below.
        # https://github.com/sigstore/cosign
      
        - name: Sign the published Docker image
          if: ${{ github.event_name != 'pull_request' }}
          env:
                
        # https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-an-intermediate-environment-variable
            TAGS: ${{ steps.meta.outputs.tags }}
            DIGEST: ${{ steps.build-and-push.outputs.digest }}
      
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
          run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
      